FROM node:22-bookworm AS builder

WORKDIR /grist

# Copy package files
COPY package.json yarn.lock /grist/

# Install dependencies
RUN yarn install --frozen-lockfile --network-timeout 600000

# Copy all source files
COPY . /grist/

# Build the production app
RUN yarn run build:prod && \
    echo "Build complete. Verifying build output..." && \
    ls -la /grist/_build/app/server/ && \
    test -f /grist/_build/app/server/mergedServerMain.js && echo "Main server file found!"

FROM dustynv/cuda-python:r36.4.0-cu128-24.04

# Install Node.js
RUN apt-get update && \
    apt-get install -y ca-certificates curl gnupg && \
    curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
    apt-get install -y nodejs \
        libexpat1 \
        libsqlite3-0 \
        procps \
        tini && \
    rm -rf /var/lib/apt/lists/*

# Install Python packages
RUN pip3 install --no-cache-dir --break-system-packages \
    six python-dateutil chardet sortedcontainers iso8601 openpyxl || true

# Create directory
RUN mkdir -p /persist/docs

# CRITICAL: Copy everything in one go to avoid layer issues
COPY --from=builder /grist /grist

# Immediately verify and create entrypoint before any other operations
RUN cd /grist && \
    ls -la && \
    test -d _build || (echo "ERROR: _build missing after copy!" && exit 1) && \
    test -f _build/app/server/mergedServerMain.js || (echo "ERROR: Server file missing!" && exit 1) && \
    echo "Files verified successfully!"

WORKDIR /grist

ENV GRIST_HOST=0.0.0.0 \
    GRIST_PORT=8484 \
    GRIST_SINGLE_PORT=true \
    GRIST_SERVE_SAME_ORIGIN=true \
    GRIST_DATA_DIR=/persist/docs \
    GRIST_SANDBOX_FLAVOR=unsandboxed \
    NODE_ENV=production \
    TYPEORM_DATABASE=/persist/home.sqlite3

EXPOSE 8484

# Direct execution - no script needed
CMD ["node", "_build/app/server/mergedServerMain.js"]
