FROM node:22-bookworm AS builder

WORKDIR /grist

# Copy package files
COPY package.json yarn.lock /grist/

# Install dependencies
RUN yarn install --frozen-lockfile --network-timeout 600000

# Copy all source files
COPY . /grist/

# Build the production app
RUN yarn run build:prod

FROM dustynv/cuda-python:r36.4.0-cu128-24.04

# Install Node.js
RUN apt-get update && \
    apt-get install -y ca-certificates curl gnupg && \
    curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
    apt-get install -y nodejs \
        libexpat1 \
        libsqlite3-0 \
        procps \
        tini && \
    rm -rf /var/lib/apt/lists/*

# Install minimal Python packages
RUN pip3 install --no-cache-dir --break-system-packages \
    six python-dateutil chardet sortedcontainers iso8601 openpyxl || true

# Create directories
RUN mkdir -p /persist/docs

# Copy everything from builder
COPY --from=builder /grist /grist

WORKDIR /grist

# Create a debugging startup script
RUN echo '#!/bin/bash' > /start.sh && \
    echo 'set -e' >> /start.sh && \
    echo '' >> /start.sh && \
    echo 'echo "Starting Grist..."' >> /start.sh && \
    echo 'echo "Current directory: $(pwd)"' >> /start.sh && \
    echo 'echo "Listing /grist contents:"' >> /start.sh && \
    echo 'ls -la /grist/' >> /start.sh && \
    echo '' >> /start.sh && \
    echo '# Check for common entry points' >> /start.sh && \
    echo 'if [ -f "_build/app/server/mergedServerMain.js" ]; then' >> /start.sh && \
    echo '  echo "Found _build/app/server/mergedServerMain.js"' >> /start.sh && \
    echo '  exec node _build/app/server/mergedServerMain.js' >> /start.sh && \
    echo 'elif [ -f "_build/app/server/lib/main.js" ]; then' >> /start.sh && \
    echo '  echo "Found _build/app/server/lib/main.js"' >> /start.sh && \
    echo '  exec node _build/app/server/lib/main.js' >> /start.sh && \
    echo 'elif [ -d "_build" ]; then' >> /start.sh && \
    echo '  echo "Found _build directory, searching for main files..."' >> /start.sh && \
    echo '  find _build -name "*.js" -path "*/server/*" | head -20' >> /start.sh && \
    echo '  echo "Trying to start from _build/app/server/lib/main.js"' >> /start.sh && \
    echo '  exec node _build/app/server/lib/main.js' >> /start.sh && \
    echo 'else' >> /start.sh && \
    echo '  echo "ERROR: No entry point found!"' >> /start.sh && \
    echo '  echo "Directory structure:"' >> /start.sh && \
    echo '  find /grist -type d -maxdepth 3' >> /start.sh && \
    echo '  exit 1' >> /start.sh && \
    echo 'fi' >> /start.sh && \
    chmod +x /start.sh

ENV GRIST_HOST=0.0.0.0 \
    GRIST_PORT=8484 \
    GRIST_SINGLE_PORT=true \
    GRIST_SERVE_SAME_ORIGIN=true \
    GRIST_DATA_DIR=/persist/docs \
    GRIST_SANDBOX_FLAVOR=unsandboxed \
    NODE_ENV=production \
    TYPEORM_DATABASE=/persist/home.sqlite3

EXPOSE 8484

CMD ["/start.sh"]
