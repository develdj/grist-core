# Use official Grist image approach but with Jetson base
FROM node:22-bullseye as builder

WORKDIR /grist
COPY . /grist

RUN yarn install --frozen-lockfile --network-timeout 600000 && \
    yarn install --prod --frozen-lockfile --modules-folder=node_modules_prod && \
    yarn run build:prod

# Jetson runtime with CUDA support
FROM dustynv/cuda-python:r36.4.0-cu128-24.04

# Install dependencies
RUN apt-get update && \
    apt-get install -y \
        curl \
        dumb-init \
        libexpat1 \
        libsqlite3-0 && \
    curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
    apt-get install -y nodejs && \
    rm -rf /var/lib/apt/lists/*

# Install Python packages
RUN pip3 install --no-cache-dir --break-system-packages \
    six python-dateutil chardet sortedcontainers iso8601 openpyxl

# Add grist user
RUN useradd -ms /bin/bash grist && \
    mkdir -p /persist/docs && \
    chown -R grist:grist /persist

# Copy built application
WORKDIR /grist
COPY --from=builder --chown=grist:grist /grist/package.json /grist/package.json
COPY --from=builder --chown=grist:grist /grist/node_modules_prod /grist/node_modules
COPY --from=builder --chown=grist:grist /grist/_build /grist/_build
COPY --from=builder --chown=grist:grist /grist/static /grist/static
COPY --from=builder --chown=grist:grist /grist/bower_components /grist/bower_components
COPY --from=builder --chown=grist:grist /grist/sandbox /grist/sandbox
COPY --from=builder --chown=grist:grist /grist/plugins /grist/plugins
COPY --from=builder --chown=grist:grist /grist/stubs /grist/stubs

USER grist

ENV GRIST_HOST=0.0.0.0 \
    GRIST_PORT=8484 \
    GRIST_DATA_DIR=/persist/docs \
    GRIST_SANDBOX_FLAVOR=unsandboxed \
    NODE_ENV=production \
    HOME=/home/grist

EXPOSE 8484

ENTRYPOINT ["/usr/bin/dumb-init", "-c", "--"]
CMD ["node", "_build/app/server/mergedServerMain.js"]
