# Builder stage
FROM node:22-bullseye as builder

RUN apt-get update && \
    apt-get install -y build-essential python3 make g++ && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /grist
COPY . /grist

RUN yarn install --frozen-lockfile --network-timeout 600000 && \
    yarn run build:prod && \
    echo "=== Build complete ===" && \
    ls -la /grist/_build/app/server/

# Jetson runtime 
FROM dustynv/cuda-python:r36.4.0-cu128-24.04

RUN apt-get update && \
    apt-get install -y \
        curl \
        dumb-init \
        libexpat1 \
        libsqlite3-0 && \
    curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
    apt-get install -y nodejs && \
    rm -rf /var/lib/apt/lists/*

RUN pip3 install --index-url https://pypi.org/simple/ \
    --no-cache-dir --break-system-packages \
    six python-dateutil chardet sortedcontainers iso8601 openpyxl || true

RUN useradd -ms /bin/bash grist && \
    mkdir -p /persist/docs && \
    chown -R grist:grist /persist

WORKDIR /grist

# Copy everything from builder
COPY --from=builder /grist /grist

# Verify and set ownership
RUN echo "Checking copied files..." && \
    ls -la /grist/_build/app/server/ && \
    chown -R grist:grist /grist

USER grist

ENV GRIST_HOST=0.0.0.0 \
    GRIST_PORT=8484 \
    GRIST_DATA_DIR=/persist/docs \
    GRIST_SANDBOX_FLAVOR=unsandboxed \
    NODE_ENV=production \
    HOME=/home/grist

EXPOSE 8484

# Use the actual main file that exists
ENTRYPOINT ["/usr/bin/dumb-init", "-c", "--"]
CMD ["node", "_build/app/server/devServerMain.js"]
