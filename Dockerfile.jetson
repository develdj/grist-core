FROM dustynv/cuda-python:r36.4.0-cu128-24.04

# Install Node.js and build tools
RUN apt-get update && \
    apt-get install -y ca-certificates curl gnupg git && \
    curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
    apt-get install -y nodejs \
        libexpat1 \
        libsqlite3-0 \
        procps \
        tini \
        build-essential && \
    npm install -g yarn && \
    rm -rf /var/lib/apt/lists/*

# Install Python packages
RUN pip3 install --no-cache-dir --break-system-packages \
    six python-dateutil chardet sortedcontainers iso8601 openpyxl || true

# Create directories
RUN mkdir -p /persist/docs /grist

WORKDIR /grist

# Copy and build
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile --network-timeout 600000

COPY . .

# Build and immediately check what's created
RUN yarn run build:prod && \
    echo "=== BUILD COMPLETE ===" && \
    echo "Contents of /grist:" && \
    ls -la /grist/ && \
    echo "Looking for _build directory:" && \
    find /grist -type d -name "_build" 2>/dev/null | head -5 && \
    echo "Looking for any .js files with 'server' in path:" && \
    find /grist -path "*server*.js" -type f 2>/dev/null | head -20 && \
    echo "Checking if running 'yarn start' works:" && \
    timeout 5 yarn start || echo "Start command output above"

# Create debug startup
RUN echo '#!/bin/bash' > /start.sh && \
    echo 'echo "Current directory: $(pwd)"' >> /start.sh && \
    echo 'echo "Contents of /grist:"' >> /start.sh && \
    echo 'ls -la /grist/' >> /start.sh && \
    echo 'echo "Looking for server files:"' >> /start.sh && \
    echo 'find /grist -name "*server*.js" -type f 2>/dev/null | head -10' >> /start.sh && \
    echo 'echo "Trying yarn start:"' >> /start.sh && \
    echo 'cd /grist && exec yarn start' >> /start.sh && \
    chmod +x /start.sh

ENV GRIST_HOST=0.0.0.0 \
    GRIST_PORT=8484 \
    GRIST_SINGLE_PORT=true \
    GRIST_SERVE_SAME_ORIGIN=true \
    GRIST_DATA_DIR=/persist/docs \
    GRIST_SANDBOX_FLAVOR=unsandboxed \
    NODE_ENV=production \
    TYPEORM_DATABASE=/persist/home.sqlite3

EXPOSE 8484

CMD ["/start.sh"]
