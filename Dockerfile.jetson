FROM dustynv/cuda-python:r36.4.0-cu128-24.04

# Install Node.js and build tools
RUN apt-get update && \
    apt-get install -y ca-certificates curl gnupg git && \
    curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
    apt-get install -y nodejs \
        libexpat1 \
        libsqlite3-0 \
        procps \
        tini \
        build-essential && \
    npm install -g yarn && \
    rm -rf /var/lib/apt/lists/*

# Install Python packages
RUN pip3 install --no-cache-dir --break-system-packages \
    six python-dateutil chardet sortedcontainers iso8601 openpyxl || true

# Create directories
RUN mkdir -p /persist/docs /grist

WORKDIR /grist

# Copy and build in place
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile --network-timeout 600000

COPY . .
RUN yarn run build:prod && \
    echo "Build complete. Checking files..." && \
    ls -la _build/app/server/ && \
    find _build/app/server -name "*.js" -type f | head -10

# Create a startup script that finds the right entry point
RUN echo '#!/bin/bash' > /start.sh && \
    echo 'cd /grist' >> /start.sh && \
    echo 'if [ -f "_build/app/server/mergedServerMain.js" ]; then' >> /start.sh && \
    echo '  exec node _build/app/server/mergedServerMain.js' >> /start.sh && \
    echo 'elif [ -f "_build/app/server/MergedServer.js" ]; then' >> /start.sh && \
    echo '  exec node _build/app/server/MergedServer.js' >> /start.sh && \
    echo 'elif [ -f "_build/app/server/devServerMain.js" ]; then' >> /start.sh && \
    echo '  exec node _build/app/server/devServerMain.js' >> /start.sh && \
    echo 'else' >> /start.sh && \
    echo '  echo "Available JS files in _build/app/server:"' >> /start.sh && \
    echo '  ls -la _build/app/server/*.js 2>/dev/null || echo "No JS files found"' >> /start.sh && \
    echo '  echo "Starting first available main file..."' >> /start.sh && \
    echo '  exec node _build/app/server/$(ls _build/app/server/*.js | head -1)' >> /start.sh && \
    echo 'fi' >> /start.sh && \
    chmod +x /start.sh

ENV GRIST_HOST=0.0.0.0 \
    GRIST_PORT=8484 \
    GRIST_SINGLE_PORT=true \
    GRIST_SERVE_SAME_ORIGIN=true \
    GRIST_DATA_DIR=/persist/docs \
    GRIST_SANDBOX_FLAVOR=unsandboxed \
    NODE_ENV=production \
    TYPEORM_DATABASE=/persist/home.sqlite3

EXPOSE 8484

CMD ["/start.sh"]
