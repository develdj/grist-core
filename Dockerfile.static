# Dockerfile.static - Builds grist-static from GitHub
FROM node:22-alpine AS builder

# Install git
RUN apk add --no-cache git

# Clone the grist-static repository
RUN git clone https://github.com/develdj/grist-static.git /app
WORKDIR /app

# Install dependencies and build
RUN npm ci || npm install
RUN npm run build || echo "No build script found"

# Production stage
FROM nginx:alpine

# Copy built static files (adjust paths based on grist-static structure)
COPY --from=builder /app/dist /usr/share/nginx/html
COPY --from=builder /app/public /usr/share/nginx/html
COPY --from=builder /app/*.html /usr/share/nginx/html/
COPY --from=builder /app/*.js /usr/share/nginx/html/
COPY --from=builder /app/*.css /usr/share/nginx/html/

# Create nginx configuration
RUN echo 'server { \
    listen 80; \
    server_name _; \
    root /usr/share/nginx/html; \
    index index.html index.htm; \
    \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    \
    location /api/ { \
        proxy_pass http://grist:8484/; \
        proxy_http_version 1.1; \
        proxy_set_header Upgrade $http_upgrade; \
        proxy_set_header Connection "upgrade"; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
