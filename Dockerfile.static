FROM node:22-alpine AS builder

RUN apk add --no-cache git

# Clone YOUR repository
RUN git clone https://github.com/develdj/grist-static.git /app
WORKDIR /app

# If there's a build process, run it
RUN if [ -f "package.json" ]; then \
        npm install && \
        npm run build 2>/dev/null || true; \
    fi

# Production stage
FROM nginx:alpine

# Copy the actual files from your repository
COPY --from=builder /app /usr/share/nginx/html

# If there's an index.html in root, it will be served
# Configure nginx to proxy API requests to Grist
RUN cat > /etc/nginx/conf.d/default.conf <<'EOF'
server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    location / {
        try_files $uri $uri/ /index.html =404;
    }
    
    location /api/ {
        proxy_pass http://grist:8484/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /o/ {
        proxy_pass http://grist:8484/o/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
EOF

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
