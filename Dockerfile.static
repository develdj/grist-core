FROM node:22-alpine AS builder

RUN apk add --no-cache git make python3

# Clone and build
RUN git clone https://github.com/develdj/grist-static.git /app
WORKDIR /app

# Check if there's a build process
RUN ls -la && \
    if [ -f "Makefile" ]; then \
        make || true; \
    fi

# Look for the actual HTML files
RUN find . -name "*.html" -o -name "*.js" -o -name "*.css" | head -20

# Production stage
FROM nginx:alpine

# Remove default nginx files
RUN rm -rf /usr/share/nginx/html/*

# Copy everything from the repository
COPY --from=builder /app/page /usr/share/nginx/html/
COPY --from=builder /app/ext /usr/share/nginx/html/ext
COPY --from=builder /app/docs /usr/share/nginx/html/docs

# If page directory has content, use it as root
COPY --from=builder /app/page/* /usr/share/nginx/html/ 2>/dev/null || true

# Configure nginx
RUN cat > /etc/nginx/conf.d/default.conf <<'EOF'
server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    location / {
        try_files $uri $uri/ =404;
        autoindex on;  # Show directory listing if no index
    }
    
    location /api/ {
        proxy_pass http://grist:8484/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
EOF

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
